data8by8 = [
4, 4, 4.36000000
4, 4, 4.76000000
4, 4, 4.71000000
4, 4, 4.80000000
4, 4, 6.21000000
4, 4, 6.57000000
4, 4, 6.17000000
4, 4, 6.30000000
4, 4, 6.01000000
4, 4, 6.55000000
4, 4, 4.27000000
4, 4, 4.45000000
4, 3, 7.90000000
4, 3, 9.29000000
4, 3, 9.32000000
4, 3, 9.57000000
3, 4, 7.84000000
3, 4, 8.44000000
3, 4, 9.20000000
3, 4, 9.44000000
4, 3, 9.63000000
4, 3, 9.84000000
4, 3, 10.81000000
4, 3, 11.95000000
3, 4, 9.63000000
3, 4, 10.33000000
3, 4, 11.20000000
3, 4, 11.60000000
2, 4, 7.76000000
4, 2, 8.85000000
2, 4, 8.38000000
2, 4, 9.33000000
4, 2, 9.50000000
4, 2, 9.58000000
4, 2, 7.22000000
2, 4, 7.91000000
2, 4, 8.65000000
2, 4, 8.88000000
4, 2, 9.17000000
2, 2, 7.96000000
2, 2, 8.77000000
4, 1, 10.59000000
4, 1, 10.79000000
1, 4, 11.51000000
1, 4, 12.04000000
2, 2, 6.49000000
2, 2, 6.88000000
1, 4, 8.49000000
1, 4, 8.68000000
4, 1, 11.62000000
4, 1, 11.90000000
2, 1, 27.95000000
2, 1, 30.17000000
2, 1, 30.49000000
2, 1, 31.53000000
1, 2, 32.07000000
1, 2, 33.19000000
1, 2, 33.68000000
1, 2, 33.59000000
1, 2, 26.01000000
1, 2, 28.35000000
2, 1, 30.27000000
2, 1, 30.32000000
2, 1, 32.97000000
2, 1, 33.62000000
1, 2, 33.76000000
1, 2, 33.94000000
2, 1, 34.58000000
1, 2, 34.44000000
2, 1, 35.24000000
1, 2, 35.40000000
1, 1, 38.99000000
1, 1, 39.16000000
1, 1, 39.17000000
1, 1, 39.21000000
1, 1, 39.25000000
1, 1, 39.25000000
1, 1, 39.32000000
1, 1, 39.41000000
1, 1, 39.38000000
1, 1, 39.38000000
1, 1, 39.40000000
1, 1, 39.45000000
1, 1, 38.32000000
1, 1, 38.36000000
1, 1, 38.39000000
1, 1, 38.49000000
1, 1, 38.47000000
1, 1, 38.57000000
1, 1, 38.58000000
1, 1, 38.64000000
];

data16by16 = [
    6, 4, 7.35000000
6, 4, 7.45000000
6, 4, 7.49000000
4, 6, 7.63000000
4, 6, 8.14000000
5, 4, 8.03000000
5, 4, 7.52000000
4, 5, 6.51000000
4, 5, 8.18000000
4, 4, 9.97000000
4, 4, 9.44000000
4, 4, 9.57000000
4, 4, 9.32000000
3, 4, 11.55000000
3, 4, 11.98000000
4, 3, 14.58000000
4, 3, 11.55000000
2, 4, 19.67000000
2, 4, 15.21000000
4, 2, 15.19000000
4, 2, 15.17000000
2, 3, 18.94000000
2, 3, 19.54000000
3, 2, 18.49000000
3, 2, 19.09000000
2, 2, 22.40000000
2, 2, 24.74000000
1, 4, 29.57000000
4, 1, 29.20000000
2, 1, 45.62000000
2, 1, 45.94000000
1, 2, 43.25000000
1, 2, 46.17000000
1, 1, 86.54000000
1, 1, 109.10000000
1, 1, 81.70000000
1, 1, 87.54000000
];

clf
plotData(data8by8, "8 x 8 grid", "8by8");

plotData(data16by16, "16 x 16 grid", "16by16");

function plotData(data, dataTitle, fName)
pw = data(:, 1);
ph = data(:, 2);
t = data(:, 3);

P = pw.*ph;


uniques = unique(P)';
TAvgbyP = zeros(1, length(uniques));
TStdbyP = zeros(1, length(uniques));

for i = 1:length(uniques)
    p = uniques(i);
    tvals = find(P == p);
    
    TAvgbyP(i) = mean(t(tvals));
    TStdbyP(i) = std(t(tvals));
end

plot(uniques, TAvgbyP, '-o', 'LineWidth', 2, 'DisplayName', 'Average runtime')
hold on
plot(uniques, TStdbyP, '-o', 'LineWidth', 2, 'DisplayName', 'Standard deviation')
xlabel("Processes");
ylabel("Runtime [s]");
legend('show', 'location', 'best');
title(dataTitle);
storeFigure(sprintf("%s_runtime", fName));
clf


speedup = TAvgbyP(1) ./ TAvgbyP;
plot(uniques, speedup, '-o', 'LineWidth', 2, 'DisplayName', 'Average speedup')
lims = ylim;
hold on
plot(uniques, uniques, '--', 'LineWidth', 2, 'DisplayName', 'Ideal speedup')
ylim(lims)
xlabel("Processes");
ylabel("Speedup [x]");
legend('show', 'location', 'best');
title(dataTitle);
storeFigure(sprintf("%s_speedup", fName));
clf
end